---
title: Creating an Instance
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

You can create a Service Registry service instance using either the Cloud Foundry Command Line Interface tool (cf CLI) or [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF) Apps Manager.

<p class='note'><strong>Note</strong>: Service Registry service instances can run in a high-availability mode, with an arbitrary number of replicated nodes. This currently can only be configured through use of the cf CLI. (After creating a service instance using Apps Manager, you can use the cf CLI to set the number of nodes. See the <a href="/spring-cloud-services/service-registry/updating-an-instance.html">Updating an Instance</a> topic.)</p>

## <a id="using-cf-cli"></a>Using the cf CLI

Target the correct org and space:

<pre class="terminal">
$ cf target -o myorg -s development

API endpoint:   https://api.run.pivotal.io (API version: 2.61.0)
User:           username@example.com
Org:            myorg
Space:          development
</pre>

You can view plan details for the Config Server product by running `cf marketplace -s`.

<pre class="terminal">
$ cf marketplace
Getting services from marketplace in org myorg / space development as username@example.com...
OK

service                       plans          description
p-circuit-breaker-dashboard   standard       Circuit Breaker Dashboard for Spring Cloud Applications
p-config-server               standard       Config Server for Spring Cloud Applications
p-service-registry            standard       Service Registry for Spring Cloud Applications

TIP:  Use 'cf marketplace -s SERVICE' to view descriptions of individual plans of a given service.

$ cf marketplace -s p-service-registry
Getting service plan information for service p-service-registry as username@example.com...
OK

service plan   description     free or paid
standard       Standard Plan   free
</pre>

Run `cf create-service`, specifying the service, plan name, and instance name. Optionally, you may add the `-c` flag and provide a JSON object that specifies the number of nodes to provision as `count` (by default, the instance will be provisioned with only a single node).

To create an instance with a single node, run:

<pre class="terminal">
$ cf create-service p-service-registry standard service-registry
Creating service instance service-registry in org myorg / space development as username@example.com...
OK

Create in progress. Use 'cf services' or 'cf service service-registry' to check operation status.
</pre>

To create an instance with three nodes, run:

<pre class="terminal">
$ cf create-service p-service-registry standard service-registry -c '{"count": 3}'
Creating service instance service-registry in org myorg / space development as username@example.com...
OK

Create in progress. Use 'cf services' or 'cf service service-registry' to check operation status.
</pre>

As the command output suggests, you can use the `cf services` or `cf service` commands to check the status of the service instance. When the Service Registry instance is ready to be used, the `cf service` command will give a status of `create succeeded`:

<pre class="terminal">
$ cf service service-registry

Service instance: service-registry
Service: p-service-registry
Bound apps: agency,company
Tags: 
Plan: standard
Description: Service Registry for Spring Cloud Applications
Documentation url: http://docs.pivotal.io/spring-cloud-services/
Dashboard: https://spring-cloud-service-broker.cfapps.io/dashboard/p-service-registry/01460799-7ba8-4775-ba63-5b3f6c350d6c

Last Operation
Status: create succeeded
Message: 
Started: 2016-09-09T14:39:09Z
Updated: 2016-09-09T14:42:20Z
</pre>

For information about registering an application with a Service Registry service instance, see the <a href="/spring-cloud-services/service-registry/writing-client-applications.html">Writing Client Applications</a> topic.
